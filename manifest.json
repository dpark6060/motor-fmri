{
	"name": "presurgical-report",
	"label": "Presurgical Report Generator",
	"description": "Generates a report from an fmri scan of an epilepsy patient",
	"author": "Brain Science Center, University of Pennsylvania",
	"maintainer": "Will Tackett <william.tackett@pennmedicine.upenn.edu>",
	"source": "https://github.com/willtack/presurgical-report",
	"url": "https://github.com/willtack/presurgical-report",
	"version": "1.0.7",
	"custom": {
		"gear-builder": {
			"category": "analysis",
			"image": "willtack/presurgical-report:1.0.7"
		},
		"flywheel": {
			"suite": "BrainScienceCenter"
		}
	},
	"license": "BSD-3-Clause",
	"inputs": {
		"api_key": {
			"base": "api-key"
		},
		"fmriprepdir": {
			"description": "Full path to directory containing fmriprep results",
			"base": "file"
		}
	},
	"config": {
		"AROMA":{
			"default": false,
			"description": "Use ICA-AROMA denoised BOLD images.",
			"type": "boolean"
		},
      "save_intermediary_files":{
            "default": false,
            "description": "Save the files from the model fitting workflow.",
            "type": "boolean"
        },
		"thresh_method":{
            "default": "fdr",
            "description": "False discovery rate or cluster-wise random field-based thresholding.",
			"enum":[
				"fdr",
				"cluster"
			],
            "type": "string"
        },
		"fwhm":{
            "default": "8",
            "description": "Size of smoothing kernel",
            "type": "integer"
        },
		"cluster_size_thresh":{
            "default": "75",
            "description": "Cluster extent threshold",
            "type": "integer"
        }
	},
	"environment": {
		"FLYWHEEL": "/flywheel/v0",
		"FSLDIR": "/usr/share/fsl",
		"FSLMULTIFILEQUIT": "TRUE",
		"FSLOUTPUTTYPE": "NIFTI_GZ",
		"LANG": "C.UTF-8",
		"LD_LIBRARY_PATH": "/usr/share/fsl/6.0/lib",
		"PATH": "/usr/local/miniconda/bin:/usr/share/fsl/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
		"PYTHON_PIP_VERSION": "19.2.2",
		"PYTHON_VERSION": "3.7.4"
	},
	"command": "/flywheel/v0/run.sh"
}
